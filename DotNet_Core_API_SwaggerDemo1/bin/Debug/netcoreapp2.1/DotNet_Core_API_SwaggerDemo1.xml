<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNet_Core_API_SwaggerDemo1</name>
    </assembly>
    <members>
        <member name="T:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController">
            <summary>
            基础CRUD控制器
            </summary>
        </member>
        <member name="F:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController._log">
            <summary>
            日志
            </summary>
        </member>
        <member name="F:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController._DBHelper">
            <summary>
            数据库访问类
            </summary>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.#ctor(IDAL.IHomeDAL)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.GetList(System.Int32,System.Int32)">
            <summary>
            获取数据（异步，读取数据库，分页）
            </summary>
            <param name="pagesize">当前显示的页</param>
            <param name="pagecount">每页显示条数</param>
            <returns></returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.GetUserbyId(System.Int32)">
            <summary>
            根据ID 获取用户（使用异步，读取数据库）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.GetUserbyIdJson(System.Int32)">
            <summary>
            根据ID获取用户（使用异步，读取数据库，json数据 ）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.GetUserbyName(System.String)">
            <summary>
            根据姓名获取Model
            </summary>
            <param name="name">姓名</param>
            <returns>model</returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.EditUser(DotNet_Core_API_SwaggerDemo1.Model.User)">
            <summary>
            根据ID修改信息(使用异步，读取数据库)
            </summary>
            <param name="newuser"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.AddUser(DotNet_Core_API_SwaggerDemo1.Model.User)">
            <summary>
            添加用户(使用异步,添加到数据库)
            </summary>
            <param name="newuser"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.DeleteUser(System.Int32)">
            <summary>
            删除用户（异步，读取数据库）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Controllers.HomeController.Add1000data(System.Boolean)">
            <summary>
            添加1000条数据（禁用）
            </summary>
            <param name="isadd">是否添加</param>
            <returns></returns>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            配置请求管道（中间件）
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory">日志工厂</param>
        </member>
        <member name="M:DotNet_Core_API_SwaggerDemo1.Startup.AddTranTest(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            依赖注入(默认)
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
